// Generated by msgbuilder 2020-05-10 05:39:47 +0000

import StdMsgs
import geometry_msgs

extension gazebo_msgs {

	public struct GetModelStateResponse: ServiceMessage {
		public static let md5sum: String = "ccd51739bb00f0141629e87b792e92b9"
		public static let datatype = "gazebo_msgs/GetModelStateResponse"
		public static var srvMd5sum: String = GetModelState.md5sum
		public static var srvDatatype: String = GetModelState.datatype
		public static let definition = """
			Header header                        # Standard metadata for higher-level stamped data types.
			                                     # * header.seq holds the number of requests since the plugin started
			                                     # * header.stamp timestamp related to the pose
			                                     # * header.frame_id not used but currently filled with the relative_entity_name
			geometry_msgs/Pose pose              # pose of model in relative entity frame
			geometry_msgs/Twist twist            # twist of model in relative entity frame
			bool success                         # return true if get successful
			string status_message                # comments if available
			"""

	
		public var header: std_msgs.Header
		public var pose: geometry_msgs.Pose
		public var twist: geometry_msgs.Twist
		public var success: Bool
		public var status_message: String

		public init(header: std_msgs.Header, pose: geometry_msgs.Pose, twist: geometry_msgs.Twist, success: Bool, status_message: String) {
			self.header = header
			self.pose = pose
			self.twist = twist
			self.success = success
			self.status_message = status_message
		}

		public init() {
			header = std_msgs.Header()
			pose = geometry_msgs.Pose()
			twist = geometry_msgs.Twist()
			success = Bool()
			status_message = String()
		}
	}
}