// Generated by msgbuilder 2020-05-14 06:44:12 +0000

import StdMsgs

extension gazebo_msgs {
	public enum GetJointProperties: ServiceProt {
		public static let md5sum: String = "0b15ad073ec115b3e511a647643119a4"
		public static let datatype = "gazebo_msgs/GetJointProperties"

	
		public struct Request: ServiceRequestMessage {
			public static let md5sum: String = "0be1351618e1dc030eb7959d9a4902de"
			public static let datatype = "gazebo_msgs/GetJointPropertiesRequest"
			public typealias ServiceType = GetJointProperties
			public static let definition = """
				string joint_name                    # name of joint
				"""
	
		
			public var joint_name: String
	
			public init(joint_name: String) {
				self.joint_name = joint_name
			}
	
			public init() {
				joint_name = String()
			}
		}

		/// joint type
		/// dynamics properties
		/// joint state
		/// service return status
		public struct Response: ServiceResponseMessage {
			public static let md5sum: String = "9dfef3a9caa6ded2ccced063406b60e3"
			public static let datatype = "gazebo_msgs/GetJointPropertiesResponse"
			public typealias ServiceType = GetJointProperties
			public static let definition = """
				# joint type
				uint8 type
				uint8 REVOLUTE    = 0                # single DOF
				uint8 CONTINUOUS  = 1                # single DOF (revolute w/o joints)
				uint8 PRISMATIC   = 2                # single DOF
				uint8 FIXED       = 3                # 0 DOF
				uint8 BALL        = 4                # 3 DOF
				uint8 UNIVERSAL   = 5                # 2 DOF
				# dynamics properties
				float64[] damping
				# joint state
				float64[] position
				float64[] rate
				# service return status
				bool success                         # return true if get successful
				string status_message                # comments if available
				"""
	
			public static let REVOLUTE : UInt8 = 0
			public static let CONTINUOUS : UInt8 = 1
			public static let PRISMATIC : UInt8 = 2
			public static let FIXED : UInt8 = 3
			public static let BALL : UInt8 = 4
			public static let UNIVERSAL : UInt8 = 5
			public var type: UInt8
			public var damping: [Float64]
			public var position: [Float64]
			public var rate: [Float64]
			public var success: Bool
			public var status_message: String
	
			public init(type: UInt8, damping: [Float64], position: [Float64], rate: [Float64], success: Bool, status_message: String) {
				self.type = type
				self.damping = damping
				self.position = position
				self.rate = rate
				self.success = success
				self.status_message = status_message
			}
	
			public init() {
				type = UInt8()
				damping = [Float64]()
				position = [Float64]()
				rate = [Float64]()
				success = Bool()
				status_message = String()
			}
		}

	}
}