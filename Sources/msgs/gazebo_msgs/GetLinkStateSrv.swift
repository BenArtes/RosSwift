// Generated by msgbuilder 2020-05-15 06:20:49 +0000

import StdMsgs

extension gazebo_msgs {
	public enum GetLinkState: ServiceProt {
		public static let md5sum: String = "09d6c98cce97b35f7ab9bd70300657ab"
		public static let datatype = "gazebo_msgs/GetLinkState"

	
		public struct Request: ServiceRequestMessage {
			public static let md5sum: String = "7551675c30aaa71f7c288d4864552001"
			public static let datatype = "gazebo_msgs/GetLinkStateRequest"
			public typealias ServiceType = GetLinkState
			public static let definition = """
				string link_name          # name of link
				                          # link names are prefixed by model name, e.g. pr2::base_link
				string reference_frame    # reference frame of returned information, must be a valid link
				                          # if empty, use inertial (gazebo world) frame
				                          # reference_frame names are prefixed by model name, e.g. pr2::base_link
				"""
	
			public var link_name: String
			public var reference_frame: String
	
			public init(link_name: String, reference_frame: String) {
				self.link_name = link_name
				self.reference_frame = reference_frame
			}
	
			public init() {
				link_name = String()
				reference_frame = String()
			}
		}

	
		public struct Response: ServiceResponseMessage {
			public static let md5sum: String = "8ba55ad34f9c072e75c0de57b089753b"
			public static let datatype = "gazebo_msgs/GetLinkStateResponse"
			public typealias ServiceType = GetLinkState
			public static let definition = """
				gazebo_msgs/LinkState link_state
				bool success              # return true if get info is successful
				string status_message     # comments if available
				"""
	
			public var link_state: LinkState
			public var success: Bool
			public var status_message: String
	
			public init(link_state: LinkState, success: Bool, status_message: String) {
				self.link_state = link_state
				self.success = success
				self.status_message = status_message
			}
	
			public init() {
				link_state = LinkState()
				success = Bool()
				status_message = String()
			}
		}

	}
}