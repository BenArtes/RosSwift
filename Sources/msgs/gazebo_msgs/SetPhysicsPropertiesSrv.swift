// Generated by msgbuilder 2024-02-23 05:14:48 +0000

import StdMsgs

extension gazebo_msgs {
	public enum SetPhysicsProperties: ServiceProt {
		public static let md5sum: String = "97e2057080558ce4730434b5fae75c91"
		public static let datatype = "gazebo_msgs/SetPhysicsProperties"

		/// sets pose and twist of a link.  All children link poses/twists of the URDF tree will be updated accordingly
		public struct Request: ServiceRequestMessage {
			public static let md5sum: String = "abd9f82732b52b92e9d6bb36e6a82452"
			public static let datatype = "gazebo_msgs/SetPhysicsPropertiesRequest"
			public typealias ServiceType = SetPhysicsProperties
			public static let definition = """
				# sets pose and twist of a link.  All children link poses/twists of the URDF tree will be updated accordingly
				float64 time_step                  # dt in seconds
				float64 max_update_rate            # throttle maximum physics update rate
				geometry_msgs/Vector3 gravity      # gravity vector (e.g. earth ~[0,0,-9.81])
				gazebo_msgs/ODEPhysics ode_config  # configurations for ODE
				"""
	
			public var time_step: Float64
			public var max_update_rate: Float64
			public var gravity: geometry_msgs.Vector3
			public var ode_config: ODEPhysics
	
			public init(time_step: Float64, max_update_rate: Float64, gravity: geometry_msgs.Vector3, ode_config: ODEPhysics) {
				self.time_step = time_step
				self.max_update_rate = max_update_rate
				self.gravity = gravity
				self.ode_config = ode_config
			}
	
			public init() {
				time_step = Float64()
				max_update_rate = Float64()
				gravity = geometry_msgs.Vector3()
				ode_config = ODEPhysics()
			}
		}

	
		public struct Response: ServiceResponseMessage {
			public static let md5sum: String = "2ec6f3eff0161f4257b808b12bc830c2"
			public static let datatype = "gazebo_msgs/SetPhysicsPropertiesResponse"
			public typealias ServiceType = SetPhysicsProperties
			public static let definition = """
				bool success                       # return true if set wrench successful
				string status_message              # comments if available
				"""
	
			public var success: Bool
			public var status_message: String
	
			public init(success: Bool, status_message: String) {
				self.success = success
				self.status_message = status_message
			}
	
			public init() {
				success = Bool()
				status_message = String()
			}
		}

	}
}