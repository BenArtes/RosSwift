// Generated by msgbuilder 2024-02-23 05:14:48 +0000

import StdMsgs

extension control_msgs {
	/// This message presents current controller state of JTC
	/// Header timestamp should be update time of controller state
	/// The set point, that is, desired state.
	/// Current value of the process (ie: latest sensor measurement on the controlled value).
	/// The error of the controlled value, essentially reference - feedback (for a regular PID implementation).
	/// Current output of the controller.
	/// The set point, that is, desired state.
	/// Current value of the process (ie: latest sensor measurement on the controlled value).
	/// The error of the controlled value, essentially reference - feedback (for a regular PID implementation).
	/// Current output of the controller.
	public struct JointTrajectoryControllerState: MessageWithHeader {
		public static let md5sum: String = "99974924851e4e5ec2d77093f858f570"
		public static let datatype = "control_msgs/JointTrajectoryControllerState"
		public static let definition = """
			# This message presents current controller state of JTC
			# Header timestamp should be update time of controller state
			std_msgs/Header header
			string[] joint_names
			# The set point, that is, desired state.
			trajectory_msgs/JointTrajectoryPoint reference
			# Current value of the process (ie: latest sensor measurement on the controlled value).
			trajectory_msgs/JointTrajectoryPoint feedback
			# The error of the controlled value, essentially reference - feedback (for a regular PID implementation).
			trajectory_msgs/JointTrajectoryPoint error
			# Current output of the controller.
			trajectory_msgs/JointTrajectoryPoint output
			string[] multi_dof_joint_names
			# The set point, that is, desired state.
			trajectory_msgs/MultiDOFJointTrajectoryPoint multi_dof_reference
			# Current value of the process (ie: latest sensor measurement on the controlled value).
			trajectory_msgs/MultiDOFJointTrajectoryPoint multi_dof_feedback
			# The error of the controlled value, essentially reference - feedback (for a regular PID implementation).
			trajectory_msgs/MultiDOFJointTrajectoryPoint multi_dof_error
			# Current output of the controller.
			trajectory_msgs/MultiDOFJointTrajectoryPoint multi_dof_output
			"""

		public var header: std_msgs.Header
		public var joint_names: [String]
		public var reference: trajectory_msgs.JointTrajectoryPoint
		public var feedback: trajectory_msgs.JointTrajectoryPoint
		public var error: trajectory_msgs.JointTrajectoryPoint
		public var output: trajectory_msgs.JointTrajectoryPoint
		public var multi_dof_joint_names: [String]
		public var multi_dof_reference: trajectory_msgs.MultiDOFJointTrajectoryPoint
		public var multi_dof_feedback: trajectory_msgs.MultiDOFJointTrajectoryPoint
		public var multi_dof_error: trajectory_msgs.MultiDOFJointTrajectoryPoint
		public var multi_dof_output: trajectory_msgs.MultiDOFJointTrajectoryPoint

		public init(header: std_msgs.Header, joint_names: [String], reference: trajectory_msgs.JointTrajectoryPoint, feedback: trajectory_msgs.JointTrajectoryPoint, error: trajectory_msgs.JointTrajectoryPoint, output: trajectory_msgs.JointTrajectoryPoint, multi_dof_joint_names: [String], multi_dof_reference: trajectory_msgs.MultiDOFJointTrajectoryPoint, multi_dof_feedback: trajectory_msgs.MultiDOFJointTrajectoryPoint, multi_dof_error: trajectory_msgs.MultiDOFJointTrajectoryPoint, multi_dof_output: trajectory_msgs.MultiDOFJointTrajectoryPoint) {
			self.header = header
			self.joint_names = joint_names
			self.reference = reference
			self.feedback = feedback
			self.error = error
			self.output = output
			self.multi_dof_joint_names = multi_dof_joint_names
			self.multi_dof_reference = multi_dof_reference
			self.multi_dof_feedback = multi_dof_feedback
			self.multi_dof_error = multi_dof_error
			self.multi_dof_output = multi_dof_output
		}

		public init() {
			header = std_msgs.Header()
			joint_names = [String]()
			reference = trajectory_msgs.JointTrajectoryPoint()
			feedback = trajectory_msgs.JointTrajectoryPoint()
			error = trajectory_msgs.JointTrajectoryPoint()
			output = trajectory_msgs.JointTrajectoryPoint()
			multi_dof_joint_names = [String]()
			multi_dof_reference = trajectory_msgs.MultiDOFJointTrajectoryPoint()
			multi_dof_feedback = trajectory_msgs.MultiDOFJointTrajectoryPoint()
			multi_dof_error = trajectory_msgs.MultiDOFJointTrajectoryPoint()
			multi_dof_output = trajectory_msgs.MultiDOFJointTrajectoryPoint()
		}
	}
}