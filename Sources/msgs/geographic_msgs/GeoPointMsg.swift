// Generated by msgbuilder 2020-05-10 09:53:03 +0000

import StdMsgs

extension geographic_msgs {
	/// Geographic point, using the WGS 84 reference ellipsoid.
	/// Latitude [degrees]. Positive is north of equator; negative is south
	/// (-90 <= latitude <= +90).
	/// Longitude [degrees]. Positive is east of prime meridian; negative is
	/// west (-180 <= longitude <= +180). At the poles, latitude is -90 or
	/// +90, and longitude is irrelevant, but must be in range.
	/// Altitude [m]. Positive is above the WGS 84 ellipsoid (NaN if unspecified).
	public struct GeoPoint: Message {
		public static let md5sum: String = "c48027a852aeff972be80478ff38e81a"
		public static let datatype = "geographic_msgs/GeoPoint"
		public static let definition = """
			# Geographic point, using the WGS 84 reference ellipsoid.
			# Latitude [degrees]. Positive is north of equator; negative is south
			# (-90 <= latitude <= +90).
			float64 latitude
			# Longitude [degrees]. Positive is east of prime meridian; negative is
			# west (-180 <= longitude <= +180). At the poles, latitude is -90 or
			# +90, and longitude is irrelevant, but must be in range.
			float64 longitude
			# Altitude [m]. Positive is above the WGS 84 ellipsoid (NaN if unspecified).
			float64 altitude
			"""

	
		public var latitude: Float64
		public var longitude: Float64
		public var altitude: Float64

		public init(latitude: Float64, longitude: Float64, altitude: Float64) {
			self.latitude = latitude
			self.longitude = longitude
			self.altitude = altitude
		}

		public init() {
			latitude = Float64()
			longitude = Float64()
			altitude = Float64()
		}
	}
}