// Generated by msgbuilder 2020-05-09 12:28:40 +0000

import StdMsgs

extension diagnostic_msgs {
	/// This service is used as part of the process for loading analyzers at runtime,
	/// and should be used by a loader script or program, not as a standalone service.
	/// Information about dynamic addition of analyzers can be found at
	/// http://wiki.ros.org/diagnostics/Tutorials/Adding%20Analyzers%20at%20Runtime
	/// The load_namespace parameter defines the namespace where parameters for the
	/// initialization of analyzers in the diagnostic aggregator have been loaded. The
	/// value should be a global name (i.e. /my/name/space), not a relative
	/// (my/name/space) or private (~my/name/space) name. Analyzers will not be added
	/// if a non-global name is used. The call will also fail if the namespace
	/// contains parameters that follow a namespace structure that does not conform to
	/// that expected by the analyzer definitions. See
	/// http://wiki.ros.org/diagnostics/Tutorials/Configuring%20Diagnostic%20Aggregators
	/// and http://wiki.ros.org/diagnostics/Tutorials/Using%20the%20GenericAnalyzer
	/// for examples of the structure of yaml files which are expected to have been
	/// loaded into the namespace.
	public struct AddDiagnosticsRequest: ServiceMessage {
		public static let md5sum: String = "c26cf6e164288fbc6050d74f838bcdf0"
		public static let datatype = "diagnostic_msgs/AddDiagnosticsRequest"
		public static var srvMd5sum: String = AddDiagnostics.md5sum
		public static var srvDatatype: String = AddDiagnostics.datatype
		public static let definition = """
			# This service is used as part of the process for loading analyzers at runtime,
			# and should be used by a loader script or program, not as a standalone service.
			# Information about dynamic addition of analyzers can be found at
			# http://wiki.ros.org/diagnostics/Tutorials/Adding%20Analyzers%20at%20Runtime
			# The load_namespace parameter defines the namespace where parameters for the
			# initialization of analyzers in the diagnostic aggregator have been loaded. The
			# value should be a global name (i.e. /my/name/space), not a relative
			# (my/name/space) or private (~my/name/space) name. Analyzers will not be added
			# if a non-global name is used. The call will also fail if the namespace
			# contains parameters that follow a namespace structure that does not conform to
			# that expected by the analyzer definitions. See
			# http://wiki.ros.org/diagnostics/Tutorials/Configuring%20Diagnostic%20Aggregators
			# and http://wiki.ros.org/diagnostics/Tutorials/Using%20the%20GenericAnalyzer
			# for examples of the structure of yaml files which are expected to have been
			# loaded into the namespace.
			string load_namespace
			"""

	
		public var load_namespace: String

		public init(load_namespace: String) {
			self.load_namespace = load_namespace
		}

		public init() {
			load_namespace = String()
		}
	}
}